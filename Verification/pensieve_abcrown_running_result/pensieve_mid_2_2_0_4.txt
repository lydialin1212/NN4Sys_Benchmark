Configurations:

general:
  device: cuda
  seed: 100
  conv_mode: matrix
  deterministic: false
  double_fp: false
  loss_reduction_func: sum
  sparse_alpha: true
  sparse_interm: true
  save_adv_example: false
  eval_adv_example: false
  show_adv_example: false
  precompile_jit: false
  complete_verifier: bab
  enable_incomplete_verification: false
  csv_name: null
  results_file: out.txt
  root_path: ''
  deterministic_opt: false
  graph_optimizer: 'Customized("custom_graph_optimizer", "default_optimizer")'
  no_batchdim_buffers: false
  save_output: false
  output_file: out.pkl
model:
  name: null
  path: null
  onnx_path: ../Benchmarks/onnx/pensieve_mid_simple.onnx
  onnx_path_prefix: ''
  cache_onnx_conversion: false
  debug_onnx: false
  onnx_quirks: '''Reshape'': ''fix_batch_size'': True'
  input_shape: [-1, 6, 8]
  onnx_loader: default_onnx_and_vnnlib_loader
  onnx_optimization_flags: none
  onnx_vnnlib_joint_optimization_flags: none
  check_optmized: false
  flatten_final_output: false
  optimize_graph: null
data:
  start: 0
  end: 10000
  select_instance: null
  num_outputs: 10
  mean: 0.0
  std: 1.0
  pkl_path: null
  dataset: null
  data_filter_path: null
  data_idx_file: null
specification:
  type: lp
  robustness_type: verified-acc
  norm: .inf
  epsilon: null
  epsilon_min: 0.0
  vnnlib_path: ../Benchmarks/vnnlib/pensieve_2_2_0_4.vnnlib
  vnnlib_path_prefix: ''
  rhs_offset: null
solver:
  batch_size: 1
  auto_enlarge_batch_size: false
  min_batch_size_ratio: 0.1
  use_float64_in_last_iteration: false
  early_stop_patience: 10
  start_save_best: 0.5
  bound_prop_method: alpha-crown
  init_bound_prop_method: same
  prune_after_crown: false
  crown:
    batch_size: 1000000000
    max_crown_size: 1000000000
  alpha-crown:
    alpha: true
    lr_alpha: 0.1
    iteration: 100
    share_alphas: false
    lr_decay: 0.98
    full_conv_alpha: true
    max_coeff_mul: .inf
    matmul_share_alphas: false
    apply_output_constraints_to: []
    disable_optimization: []
  beta-crown:
    lr_alpha: 0.01
    lr_beta: 0.05
    lr_decay: 0.98
    optimizer: adam
    iteration: 50
    beta: true
    beta_warmup: true
    enable_opt_interm_bounds: false
    all_node_split_LP: false
  forward:
    refine: false
    dynamic: false
    max_dim: 10000
  multi_class:
    label_batch_size: 32
    skip_with_refined_bound: true
  mip:
    parallel_solvers: null
    solver_threads: 1
    refine_neuron_timeout: 15
    refine_neuron_time_percentage: 0.8
    early_stop: true
    adv_warmup: true
    mip_solver: gurobi
    skip_unsafe: false
bab:
  initial_max_domains: 1
  max_domains: .inf
  decision_thresh: 0
  timeout: 360
  timeout_scale: 1
  override_timeout: null
  get_upper_bound: false
  dfs_percent: 0.0
  pruning_in_iteration: true
  pruning_in_iteration_ratio: 0.2
  sort_targets: false
  batched_domain_list: true
  optimized_interm: ''
  interm_transfer: true
  recompute_interm: false
  sort_domain_interval: -1
  vanilla_crown: false
  cut:
    enabled: false
    implication: false
    bab_cut: false
    lp_cut: false
    method: null
    lr: 0.01
    lr_decay: 1.0
    iteration: 100
    bab_iteration: -1
    early_stop_patience: -1
    lr_beta: 0.02
    number_cuts: 50
    topk_cuts_in_filter: 1000
    batch_size_primal: 100
    max_num: 1000000000
    patches_cut: false
    cplex_cuts: false
    cplex_cuts_wait: 0
    cplex_cuts_revpickup: true
    cut_reference_bounds: true
    fix_intermediate_bounds: false
  branching:
    method: sb
    candidates: 3
    reduceop: min
    enable_intermediate_bound_opt: false
    branching_input_and_activation: false
    branching_input_and_activation_order: [input, relu]
    branching_input_iterations: 30
    branching_relu_iterations: 50
    sb_coeff_thresh: 0.1
    nonlinear_split:
      method: shortcut
      branching_point_method: uniform
      num_branches: 2
      branching_point_refinement: false
      filter: false
      filter_beta: false
      filter_batch_size: 10000
      filter_iterations: 25
      shortlist_size: 500
      loose_tanh_threshold: null
    new_input_split:
      enable: false
      batch_size: 2
      rounds: 1
      init_alpha_batch_size: 8192
      full_alpha: false
    input_split:
      enable: true
      enhanced_bound_prop_method: alpha-crown
      enhanced_branching_method: naive
      enhanced_bound_patience: 100000000.0
      attack_patience: 100000000.0
      adv_check: 0
      split_partitions: 2
      sb_margin_weight: 1.0
      sb_primary_spec: null
      sb_primary_spec_iter: 1
      sb_sum: false
      bf_backup_thresh: -1
      bf_rhs_offset: 0
      bf_zero_crossing_score: false
      ibp_enhancement: false
      catch_assertion: false
      compare_with_old_bounds: false
      update_rhs_with_attack: false
  attack:
    enabled: false
    beam_candidates: 8
    beam_depth: 7
    max_dive_fix_ratio: 0.8
    min_local_free_ratio: 0.2
    mip_start_iteration: 5
    mip_timeout: 30.0
    adv_pool_threshold: null
    refined_mip_attacker: false
    refined_batch_size: null
attack:
  pgd_order: before
  pgd_steps: 100
  pgd_restarts: 30
  pgd_batch_size: 100000000
  pgd_early_stop: true
  pgd_lr_decay: 0.99
  pgd_alpha: auto
  pgd_loss_mode: null
  enable_mip_attack: false
  adv_saver: default_adv_saver
  early_stop_condition: default_early_stop_condition
  adv_example_finalizer: default_adv_example_finalizer
  pgd_loss: default_pgd_loss
  cex_path: ./test_cex.txt
  attack_mode: PGD
  attack_tolerance: 0.0
  attack_func: attack_with_general_specs
  gama_lambda: 10.0
  gama_decay: 0.9
  check_clean: false
  input_split:
    pgd_steps: 100
    pgd_restarts: 30
    pgd_alpha: auto
  input_split_enhanced:
    pgd_steps: 200
    pgd_restarts: 500000
    pgd_alpha: auto
  input_split_check_adv:
    pgd_steps: 5
    pgd_restarts: 5
    pgd_alpha: auto
    max_num_domains: 10
debug:
  view_model: false
  lp_test: null
  rescale_vnnlib_ptb: null
  test_optimized_bounds: false
  test_optimized_bounds_after_n_iterations: 0

Experiments at Sat Oct 21 12:38:21 2023 on srg07
Internal results will be saved to out.txt.

 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% idx: 0, vnnlib ID: 0 %%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
Using onnx ../Benchmarks/onnx/pensieve_mid_simple.onnx
Using vnnlib ../Benchmarks/vnnlib/pensieve_2_2_0_4.vnnlib
Precompiled vnnlib file found at ../Benchmarks/vnnlib/pensieve_2_2_0_4.vnnlib.compiled
Loading onnx ../Benchmarks/onnx/pensieve_mid_simple.onnx wih quirks {'Reshape': {'fix_batch_size': True}}
Enabling quirks for Reshape operation: fix the first dimension shape to be -1 to support batchsize != 1.
input shape torch.Size([1, 128, 5]), new shape is tensor([ -1, 640]).
Enabling quirks for Reshape operation: fix the first dimension shape to be -1 to support batchsize != 1.
input shape torch.Size([1, 128, 5]), new shape is tensor([ -1, 640]).
Enabling quirks for Reshape operation: fix the first dimension shape to be -1 to support batchsize != 1.
input shape torch.Size([1, 128, 3]), new shape is tensor([ -1, 384]).
Attack parameters: initialization=uniform, steps=100, restarts=30, alpha=0.006250001490116119, initialization=uniform, GAMA=False
Model output of first 5 examples:
 tensor([[101.16717529,  97.18075562,  93.53556061,  88.99175262,  87.57032013,
          88.91316986]], device='cuda:0')
Adv example prediction (first 2 examples and 2 restarts):
 tensor([[[101.62628174,  97.73940277,  94.07875824,  89.63712311,  88.12305450,
           89.50796509]]], device='cuda:0')
PGD attack margin (first 2 examles and 10 specs):
 tensor([[[12.11831665,  8.23143768,  4.57079315,  0.12915802, -1.38491058]]],
       device='cuda:0')
number of violation:  1
Attack finished in 3.0491 seconds.
PGD attack failed
Total VNNLIB file length: 1, max property batch size: 1, total number of batches: 1

Properties batch 0, size 1
Remaining timeout: 355.6861324310303
##### Instance 0 first 10 spec matrices: 
tensor([[[ 1.,  0.,  0.,  0.,  0., -1.],
         [ 0.,  1.,  0.,  0.,  0., -1.],
         [ 0.,  0.,  1.,  0.,  0., -1.],
         [ 0.,  0.,  0.,  1.,  0., -1.],
         [ 0.,  0.,  0.,  0.,  1., -1.]]], dtype=torch.float64)
thresholds: tensor([0., 0., 0., 0., 0.], device='cuda:0') ######
Model: BoundedModule(
  (/0): BoundInput(name=/0, inputs=[], perturbed=False)
  (/shape.1): BoundBuffers(name=/shape.1, inputs=[], perturbed=False)
  (/19): BoundParams(name=/19, inputs=[], perturbed=False)
  (/20): BoundParams(name=/20, inputs=[], perturbed=False)
  (/25): BoundParams(name=/25, inputs=[], perturbed=False)
  (/26): BoundParams(name=/26, inputs=[], perturbed=False)
  (/31): BoundParams(name=/31, inputs=[], perturbed=False)
  (/32): BoundParams(name=/32, inputs=[], perturbed=False)
  (/37): BoundParams(name=/37, inputs=[], perturbed=False)
  (/38): BoundParams(name=/38, inputs=[], perturbed=False)
  (/47): BoundParams(name=/47, inputs=[], perturbed=False)
  (/48): BoundParams(name=/48, inputs=[], perturbed=False)
  (/53): BoundParams(name=/53, inputs=[], perturbed=False)
  (/54): BoundParams(name=/54, inputs=[], perturbed=False)
  (/shape.3): BoundBuffers(name=/shape.3, inputs=[], perturbed=False)
  (/shape.5): BoundBuffers(name=/shape.5, inputs=[], perturbed=False)
  (/shape): BoundBuffers(name=/shape, inputs=[], perturbed=False)
  (/58): BoundParams(name=/58, inputs=[], perturbed=False)
  (/59): BoundParams(name=/59, inputs=[], perturbed=False)
  (/60): BoundParams(name=/60, inputs=[], perturbed=False)
  (/61): BoundParams(name=/61, inputs=[], perturbed=False)
  (/62): BoundSplit(name=/62, inputs=[/shape.1], perturbed=False)
  (/63): BoundSplit(name=/63, inputs=[/shape.1], perturbed=False)
  (/64): BoundSplit(name=/64, inputs=[/shape.1], perturbed=False)
  (/65): BoundSqueeze(name=/65, inputs=[/62], perturbed=False)
  (/66): BoundSqueeze(name=/66, inputs=[/63], perturbed=False)
  (/67): BoundSqueeze(name=/67, inputs=[/64], perturbed=False)
  (/68): BoundUnsqueeze(name=/68, inputs=[/65], perturbed=False)
  (/69): BoundUnsqueeze(name=/69, inputs=[/66], perturbed=False)
  (/70): BoundUnsqueeze(name=/70, inputs=[/67], perturbed=False)
  (/71): BoundConcat(name=/71, inputs=[/68, /69, /70], perturbed=False)
  (/72): BoundReshape(name=/72, inputs=[/0, /71], perturbed=False)
  (/73): BoundConstant(name=/73, value=1)
  (/74): BoundConstant(name=/74, value=0)
  (/75): BoundConstant(name=/75, value=0)
  (/76): BoundConstant(name=/76, value=1)
  (/77): BoundAdd(name=/77, inputs=[/75, /76], perturbed=False)
  (/78): BoundUnsqueeze(name=/78, inputs=[/74], perturbed=False)
  (/79): BoundUnsqueeze(name=/79, inputs=[/77], perturbed=False)
  (/80): BoundUnsqueeze(name=/80, inputs=[/73], perturbed=False)
  (/81): BoundSlice(name=/81, inputs=[/72, /78, /79, /80], perturbed=False)
  (/82): BoundShape(name=/82, inputs=[/81], perturbed=False)
  (/83): BoundConstant(name=/83, value=2)
  (/84): BoundGather(name=/84, inputs=[/82, /83], perturbed=False)
  (/85): BoundConstant(name=/85, value=1)
  (/86): BoundSub(name=/86, inputs=[/84, /85], perturbed=False)
  (/87): BoundCast(name=/87, inputs=[/86], perturbed=False)
  (/88): BoundConstant(name=/88, value=tensor([1], device='cuda:0'))
  (/89): BoundReshape(name=/89, inputs=[/87, /88], perturbed=False)
  (/90): BoundCast(name=/90, inputs=[/89], perturbed=False)
  (/91): BoundGather(name=/91, inputs=[/81, /90], perturbed=False)
  (/92): BoundSqueeze(name=/92, inputs=[/91], perturbed=False)
  (/input): BoundLinear(name=/input, inputs=[/92, /19, /20], perturbed=False)
  (/94): BoundRelu(name=/94, inputs=[/input], perturbed=False)
  (/95): BoundConstant(name=/95, value=1)
  (/96): BoundConstant(name=/96, value=1)
  (/97): BoundConstant(name=/97, value=1)
  (/98): BoundConstant(name=/98, value=1)
  (/99): BoundAdd(name=/99, inputs=[/97, /98], perturbed=False)
  (/100): BoundUnsqueeze(name=/100, inputs=[/96], perturbed=False)
  (/101): BoundUnsqueeze(name=/101, inputs=[/99], perturbed=False)
  (/102): BoundUnsqueeze(name=/102, inputs=[/95], perturbed=False)
  (/103): BoundSlice(name=/103, inputs=[/72, /100, /101, /102], perturbed=False)
  (/104): BoundShape(name=/104, inputs=[/103], perturbed=False)
  (/105): BoundConstant(name=/105, value=2)
  (/106): BoundGather(name=/106, inputs=[/104, /105], perturbed=False)
  (/107): BoundConstant(name=/107, value=1)
  (/108): BoundSub(name=/108, inputs=[/106, /107], perturbed=False)
  (/109): BoundCast(name=/109, inputs=[/108], perturbed=False)
  (/110): BoundConstant(name=/110, value=tensor([1], device='cuda:0'))
  (/111): BoundReshape(name=/111, inputs=[/109, /110], perturbed=False)
  (/112): BoundCast(name=/112, inputs=[/111], perturbed=False)
  (/113): BoundGather(name=/113, inputs=[/103, /112], perturbed=False)
  (/114): BoundSqueeze(name=/114, inputs=[/113], perturbed=False)
  (/input.3): BoundLinear(name=/input.3, inputs=[/114, /25, /26], perturbed=False)
  (/116): BoundRelu(name=/116, inputs=[/input.3], perturbed=False)
  (/117): BoundConstant(name=/117, value=1)
  (/118): BoundConstant(name=/118, value=2)
  (/119): BoundConstant(name=/119, value=2)
  (/120): BoundConstant(name=/120, value=1)
  (/121): BoundAdd(name=/121, inputs=[/119, /120], perturbed=False)
  (/122): BoundUnsqueeze(name=/122, inputs=[/118], perturbed=False)
  (/123): BoundUnsqueeze(name=/123, inputs=[/121], perturbed=False)
  (/124): BoundUnsqueeze(name=/124, inputs=[/117], perturbed=False)
  (/input.7): BoundSlice(name=/input.7, inputs=[/72, /122, /123, /124], perturbed=False)
  (/input.11): BoundConv(name=/input.11, inputs=[/input.7, /31, /32], perturbed=False)
  (/127): BoundRelu(name=/127, inputs=[/input.11], perturbed=False)
  (/128): BoundConstant(name=/128, value=1)
  (/129): BoundConstant(name=/129, value=3)
  (/130): BoundConstant(name=/130, value=3)
  (/131): BoundConstant(name=/131, value=1)
  (/132): BoundAdd(name=/132, inputs=[/130, /131], perturbed=False)
  (/133): BoundUnsqueeze(name=/133, inputs=[/129], perturbed=False)
  (/134): BoundUnsqueeze(name=/134, inputs=[/132], perturbed=False)
  (/135): BoundUnsqueeze(name=/135, inputs=[/128], perturbed=False)
  (/input.15): BoundSlice(name=/input.15, inputs=[/72, /133, /134, /135], perturbed=False)
  (/input.19): BoundConv(name=/input.19, inputs=[/input.15, /37, /38], perturbed=False)
  (/138): BoundRelu(name=/138, inputs=[/input.19], perturbed=False)
  (/139): BoundConstant(name=/139, value=1)
  (/140): BoundConstant(name=/140, value=4)
  (/141): BoundConstant(name=/141, value=4)
  (/142): BoundConstant(name=/142, value=1)
  (/143): BoundAdd(name=/143, inputs=[/141, /142], perturbed=False)
  (/144): BoundUnsqueeze(name=/144, inputs=[/140], perturbed=False)
  (/145): BoundUnsqueeze(name=/145, inputs=[/143], perturbed=False)
  (/146): BoundUnsqueeze(name=/146, inputs=[/139], perturbed=False)
  (/147): BoundSlice(name=/147, inputs=[/72, /144, /145, /146], perturbed=False)
  (/148): BoundConstant(name=/148, value=2)
  (/149): BoundConstant(name=/149, value=0)
  (/150): BoundConstant(name=/150, value=0)
  (/151): BoundConstant(name=/151, value=6)
  (/152): BoundAdd(name=/152, inputs=[/150, /151], perturbed=False)
  (/153): BoundUnsqueeze(name=/153, inputs=[/149], perturbed=False)
  (/154): BoundUnsqueeze(name=/154, inputs=[/152], perturbed=False)
  (/155): BoundUnsqueeze(name=/155, inputs=[/148], perturbed=False)
  (/input.23): BoundSlice(name=/input.23, inputs=[/147, /153, /154, /155], perturbed=False)
  (/input.27): BoundConv(name=/input.27, inputs=[/input.23, /47, /48], perturbed=False)
  (/158): BoundRelu(name=/158, inputs=[/input.27], perturbed=False)
  (/159): BoundConstant(name=/159, value=1)
  (/160): BoundConstant(name=/160, value=5)
  (/161): BoundConstant(name=/161, value=5)
  (/162): BoundConstant(name=/162, value=1)
  (/163): BoundAdd(name=/163, inputs=[/161, /162], perturbed=False)
  (/164): BoundUnsqueeze(name=/164, inputs=[/160], perturbed=False)
  (/165): BoundUnsqueeze(name=/165, inputs=[/163], perturbed=False)
  (/166): BoundUnsqueeze(name=/166, inputs=[/159], perturbed=False)
  (/167): BoundSlice(name=/167, inputs=[/72, /164, /165, /166], perturbed=False)
  (/168): BoundShape(name=/168, inputs=[/167], perturbed=False)
  (/169): BoundConstant(name=/169, value=2)
  (/170): BoundGather(name=/170, inputs=[/168, /169], perturbed=False)
  (/171): BoundConstant(name=/171, value=1)
  (/172): BoundSub(name=/172, inputs=[/170, /171], perturbed=False)
  (/173): BoundCast(name=/173, inputs=[/172], perturbed=False)
  (/174): BoundConstant(name=/174, value=tensor([1], device='cuda:0'))
  (/175): BoundReshape(name=/175, inputs=[/173, /174], perturbed=False)
  (/176): BoundCast(name=/176, inputs=[/175], perturbed=False)
  (/177): BoundGather(name=/177, inputs=[/167, /176], perturbed=False)
  (/178): BoundSqueeze(name=/178, inputs=[/177], perturbed=False)
  (/179): BoundLinear(name=/179, inputs=[/178, /53, /54], perturbed=False)
  (/180): BoundSplit(name=/180, inputs=[/shape.3], perturbed=False)
  (/181): BoundSplit(name=/181, inputs=[/shape.3], perturbed=False)
  (/182): BoundSqueeze(name=/182, inputs=[/180], perturbed=False)
  (/183): BoundSqueeze(name=/183, inputs=[/181], perturbed=False)
  (/184): BoundUnsqueeze(name=/184, inputs=[/182], perturbed=False)
  (/185): BoundUnsqueeze(name=/185, inputs=[/183], perturbed=False)
  (/186): BoundConcat(name=/186, inputs=[/184, /185], perturbed=False)
  (/187): BoundReshape(name=/187, inputs=[/127, /186], perturbed=False)
  (/188): BoundSplit(name=/188, inputs=[/shape.5], perturbed=False)
  (/189): BoundSplit(name=/189, inputs=[/shape.5], perturbed=False)
  (/190): BoundSqueeze(name=/190, inputs=[/188], perturbed=False)
  (/191): BoundSqueeze(name=/191, inputs=[/189], perturbed=False)
  (/192): BoundUnsqueeze(name=/192, inputs=[/190], perturbed=False)
  (/193): BoundUnsqueeze(name=/193, inputs=[/191], perturbed=False)
  (/194): BoundConcat(name=/194, inputs=[/192, /193], perturbed=False)
  (/195): BoundReshape(name=/195, inputs=[/138, /194], perturbed=False)
  (/196): BoundSplit(name=/196, inputs=[/shape], perturbed=False)
  (/197): BoundSplit(name=/197, inputs=[/shape], perturbed=False)
  (/198): BoundSqueeze(name=/198, inputs=[/196], perturbed=False)
  (/199): BoundSqueeze(name=/199, inputs=[/197], perturbed=False)
  (/200): BoundUnsqueeze(name=/200, inputs=[/198], perturbed=False)
  (/201): BoundUnsqueeze(name=/201, inputs=[/199], perturbed=False)
  (/202): BoundConcat(name=/202, inputs=[/200, /201], perturbed=False)
  (/203): BoundReshape(name=/203, inputs=[/158, /202], perturbed=False)
  (/204): BoundConcat(name=/204, inputs=[/94, /116, /187, /195, /203, /179], perturbed=False)
  (/input.31): BoundLinear(name=/input.31, inputs=[/204, /58, /59], perturbed=False)
  (/206): BoundRelu(name=/206, inputs=[/input.31], perturbed=False)
  (/207): BoundLinear(name=/207, inputs=[/206, /60, /61], perturbed=False)
)
Model prediction is: tensor([101.16717529,  97.18075562,  93.53556061,  88.99175262,  87.57032013,
         88.91316986], device='cuda:0')
Split layers:
  BoundLinear(name=/input, inputs=[/92, /19, /20], perturbed=True): [(BoundRelu(name=/94, inputs=[/input], perturbed=True), 0)]
  BoundLinear(name=/input.3, inputs=[/114, /25, /26], perturbed=True): [(BoundRelu(name=/116, inputs=[/input.3], perturbed=True), 0)]
  BoundConv(name=/input.11, inputs=[/input.7, /31, /32], perturbed=True): [(BoundRelu(name=/127, inputs=[/input.11], perturbed=True), 0)]
  BoundConv(name=/input.19, inputs=[/input.15, /37, /38], perturbed=True): [(BoundRelu(name=/138, inputs=[/input.19], perturbed=True), 0)]
  BoundConv(name=/input.27, inputs=[/input.23, /47, /48], perturbed=True): [(BoundRelu(name=/158, inputs=[/input.27], perturbed=True), 0)]
  BoundLinear(name=/input.31, inputs=[/204, /58, /59], perturbed=True): [(BoundRelu(name=/206, inputs=[/input.31], perturbed=True), 0)]
Nonlinear functions:
   BoundRelu(name=/94, inputs=[/input], perturbed=True)
   BoundRelu(name=/116, inputs=[/input.3], perturbed=True)
   BoundRelu(name=/127, inputs=[/input.11], perturbed=True)
   BoundRelu(name=/138, inputs=[/input.19], perturbed=True)
   BoundRelu(name=/158, inputs=[/input.27], perturbed=True)
   BoundRelu(name=/206, inputs=[/input.31], perturbed=True)
layer /94 using sparse-features alpha with shape [0]; unstable size 0; total size 128 ([1, 128])
layer /94 start_node /input.31 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 128 output_shape torch.Size([128])
layer /94 start_node /207 using full alpha [2, 5, 1, 0] with unstable size None total_size 5 output_shape 5
layer /116 using sparse-features alpha with shape [0]; unstable size 0; total size 128 ([1, 128])
layer /116 start_node /input.31 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 128 output_shape torch.Size([128])
layer /116 start_node /207 using full alpha [2, 5, 1, 0] with unstable size None total_size 5 output_shape 5
layer /127 using sparse-features alpha with shape [0]; unstable size 0; total size 640 ([1, 128, 5])
layer /127 start_node /input.31 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 128 output_shape torch.Size([128])
layer /127 start_node /207 using full alpha [2, 5, 1, 0] with unstable size None total_size 5 output_shape 5
layer /138 using sparse-features alpha with shape [23]; unstable size 23; total size 640 ([1, 128, 5])
layer /138 start_node /input.31 using sparse-spec alpha [2, 2, 1, 23] with unstable size 1 total_size 128 output_shape torch.Size([128])
layer /138 start_node /207 using full alpha [2, 5, 1, 23] with unstable size None total_size 5 output_shape 5
layer /158 using sparse-features alpha with shape [0]; unstable size 0; total size 384 ([1, 128, 3])
layer /158 start_node /input.31 using sparse-spec alpha [2, 2, 1, 0] with unstable size 1 total_size 128 output_shape torch.Size([128])
layer /158 start_node /207 using full alpha [2, 5, 1, 0] with unstable size None total_size 5 output_shape 5
layer /206 using sparse-features alpha with shape [1]; unstable size 1; total size 128 ([1, 128])
layer /206 start_node /207 using full alpha [2, 5, 1, 1] with unstable size None total_size 5 output_shape 5
Optimizable variables initialized.
initial CROWN bounds: tensor([[ 1.21129913e+01,  8.21753216e+00,  4.55775499e+00,  1.09724998e-02,
         -1.39771056e+00]], device='cuda:0') None
Verified with initial CROWN!
Verified by initial bound!
Result: unsat
Time: 6.2568159103393555
